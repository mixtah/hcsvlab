
-  liClass = activepath_fuzzy?([admin_index_path, account_path, saved_searches_path, search_history_path, issue_reports_path])
%li.dropdown{ class: liClass }
  - if current_user
    %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#", :id => 'user_util'}
      = current_user.email
      %b.caret
  - else
    = link_to t('blacklight.header_links.login'), new_user_session_path, :class => "dropdown-toggle"
  %ul.util-links-other.dropdown-menu
    - if has_user_authentication_provider? and current_user
      %li= link_to t('blacklight.header_links.saved_searches'), saved_searches_path
      %li= link_to t('blacklight.header_links.search_history'), search_history_path
    %li.divider
    - if current_or_guest_user
      %li= link_to "My Account", account_path
      %li= link_to "My Licence Agreements", account_licence_agreements_path
      %li#api_token_submenu.dropdown-submenu
        %a{:href => "#"} API Key
        %ul.dropdown-menu
          - li_class = current_user.authentication_token.blank? ? "disabled" : ""
          - if li_class.present?
            %li.disabled
              %a#api_token_display{:href => "#"} No API Key generated
            %li= link_to 'Generate API Key', account_generate_token_path
          - else
            %li.disabled
              %a{:href => "#"}= current_user.authentication_token
            %li= link_to 'Regenerate API Key', account_generate_token_path, :confirm => 'Are you sure you want to regenerate your token? You will need to update any scripts that used the previous token.'
            %li= link_to 'Delete API Key', account_delete_token_path, :method => :delete, :confirm => 'Are you sure you want to delete your token? You will no longer be able to perform API actions.'
          %li.divider
          %li{:class => li_class}
            %a#clipboard_copy_token{"data-clipboard-text" => current_user.authentication_token, :href => "#"}Copy to Clipboard
          %li{:class => li_class}
            = link_to 'Download API Key', account_api_key_path
      - if current_user.is_superuser? || current_user.is_data_owner?
        %li.divider
        %li= link_to "Admin", admin_index_path
      %li.divider
      %li= link_to "Help", "http://alveo.edu.au/help", :target => "_blank"
      %li= link_to "View Usage Metrics", view_metrics_path
      %li= link_to "Report To Admin", new_issue_report_path(:url => request.original_url)
    %li.divider
    - if has_user_authentication_provider?
      - if current_user
        %li= link_to t('blacklight.header_links.logout'), destroy_user_session_path
      - else
        = link_to t('blacklight.header_links.login'), new_user_session_path
:javascript
  $(document).ready(function () {
    if (!$('#clipboard_copy_token').closest('li').hasClass('disabled')) {

      var clipboard = new Clipboard("#clipboard_copy_token");

      clipboard.on('success', function(e) {
        alert("API Key copied to clipboard");
      });

      clipboard.on('error', function(e) {
        console.error('Action:', e.action);
        console.error('Trigger:', e.trigger);
      });

    }

    //------------

    $('.dropdown-menu li a').mouseover(function (e) {
      e.stopPropagation();
      $(this).parent().parent().find('li').each(function () {
        $(this).removeClass('open');
      });
      $(this).parent().addClass('open');

    });

  });





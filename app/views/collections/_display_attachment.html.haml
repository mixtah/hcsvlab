= form_for @attachment, :url => create_attachment_path(@collection.id), :html => { :multipart => true, :id => "fileupload"  } do |f|
  .row-fluid.fileupload-buttonbar
    .form-actions
      .span7
        %span.btn.btn-primary.fileinput-button
          %i.icon-plus.icon-white
          %span Add file...
          = f.file_field :file, multiple: true, id: 'upload-field'
        %button.btn.btn-danger.delete{:type => "button"}
          %i.icon-trash.icon-white
          %span Delete
        %input.toggle{:type => "checkbox"}
        %span.fileupload-loading
      %div Max file size: 200M
  .span5.fileupload-progress.fade
    .progress.progress-success.progress-striped.active{"aria-valuemax" => "100", "aria-valuemin" => "0", :role => "progressbar"}
      .bar{:style => "width:0%;"}
    .progress-extended Â 
  %table.table.table-striped{:role => "presentation"}
    %tbody.files

:javascript
  <!-- max file size: 200M -->
  MAX_FILE_SIZE = 1024*1024*200;

  var fileUploadErrors = {
    maxFileSize: 'File is too large',
    minFileSize: 'File is too small',
    acceptFileTypes: 'Filetype not allowed',
    maxNumberOfFiles: 'Max number of files exceeded',
    uploadedBytes: 'Uploaded bytes exceed file size',
    emptyResult: 'Empty file upload result'
  };

-#The template to display files available for upload
%script#template-upload{:type => "text/x-tmpl"}
  :plain
    {% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade">
    <td class="preview"><span class="fade"></span></td>
    <td class="name"><span>{%=file.name%}</span></td>
    <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
    {% if (file.error) { %}
    <td class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</td>
    {% } else if (o.files.valid && !i) { %}
    <td>
    <div class="progress progress-success progress-striped active"><div class="bar" style="width:0%;"></div></div>
    </td>
    <td class="start">{% if (!o.options.autoUpload) { %}
    <button class="btn btn-primary">
    <i class="icon-upload icon-white"></i>
    <span>{%=locale.fileupload.start%}</span>
    </button>
    {% } %}</td>
    {% } else { %}
    <td colspan="2"></td>
    {% } %}
    <td class="cancel">{% if (!i) { %}
    <button class="btn btn-warning">
    <i class="icon-ban-circle icon-white"></i>
    <span>{%=locale.fileupload.cancel%}</span>
    </button>
    {% } %}</td>
    </tr>
    {% } %}

-#The template to display files available for download
%script#template-download{:type => "text/x-tmpl"}
  :plain
    {% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade">
    {% if (file.error) { %}
    <td></td>
    <td class="name"><span>{%=file.name%}</span></td>
    <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
    <td class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</td>
    {% } else { %}
    <td class="preview">{% if (file.thumbnail_url) { %}
    <a href="{%=file.url%}" title="{%=file.name%}" rel="gallery" download="{%=file.name%}"><img src="{%=file.thumbnail_url%}"></a>
    {% } %}</td>
    <td class="name">
    <a href="{%=file.url%}" title="{%=file.name%}" rel="{%=file.thumbnail_url&&'gallery'%}" download="{%=file.name%}">{%=file.name%}</a>
    </td>
    <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
    <td colspan="2"></td>
    {% } %}
    <td class="delete">
    <button class="btn btn-danger" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}">
    <i class="icon-trash icon-white"></i>
    <span>{%=locale.fileupload.destroy%}</span>
    </button>
    <input type="checkbox" name="delete" value="1">
    </td>
    </tr>
    {% } %}

:javascript
  $(function () {
    // Initialize the jQuery File Upload widget:
    $('#fileupload').fileupload({
      paramName: 'attachment[file]',
      autoUpload: true,
      maxFileSize: MAX_FILE_SIZE
    });

    // Load existing files:
    $.getJSON($('#fileupload').prop('action'), function (files) {
      var fu = $('#fileupload').data('blueimpFileupload'),
        template;
      fu._adjustMaxNumberOfFiles(-files.length);
      // console.log(files);
      template = fu._renderDownload(files).appendTo($('#fileupload .files'));

      // Force reflow:
      fu._reflow = fu._transition && template.length &&
        template[0].offsetWidth;
      template.addClass('in');
      $('#loading').remove();
    });

  });